default_platform(:ios)

platform :ios do
  desc "Flutter clean & pub get"
  lane :prep do
    sh "fvm flutter clean"
    sh "fvm flutter pub get"
  end

  desc "Build iOS for the selected flavor (requires --env)"
  lane :build do
    flavor = ENV.fetch("FLAVOR")
    entry = ENV.fetch("DART_ENTRY")
    scheme = ENV.fetch("IOS_SCHEME")
    configuration = ENV.fetch("IOS_CONFIGURATION")
    export_method = ENV.fetch("BUILD_EXPORT_METHOD")

    sh "fvm flutter build ipa --flavor #{flavor} -t #{entry} --no-codesign"

    gym(
      scheme: scheme,
      configuration: configuration,
      export_method: export_method,
      silent: true
    )
  end

  desc "Upload to TestFlight for the prod environment"
  lane :beta do
    build
    pilot
  end

  desc "Local iOS build that stays on the machine"
  lane :local do
    ENV["FLAVOR"] = "local"
    ENV["DART_ENTRY"] = "lib/main_local.dart"
    ENV["IOS_SCHEME"] = "local"
    ENV["IOS_CONFIGURATION"] = "Debug-local"
    ENV["BUILD_EXPORT_METHOD"] = "development"

    prep
    build
  end

  desc "Prod build & TestFlight upload"
  lane :prod do
    ENV["FLAVOR"] = "prod"
    ENV["DART_ENTRY"] = "lib/main_prod.dart"
    ENV["IOS_SCHEME"] = "prod"
    ENV["IOS_CONFIGURATION"] = "Release-prod"
    ENV["BUILD_EXPORT_METHOD"] = "app-store"

    prep
    beta
  end
end

platform :android do
  desc "Flutter clean & pub get"
  lane :prep do
    sh "fvm flutter clean"
    sh "fvm flutter pub get"
  end

  desc "Build Android artifact for a flavor"
  lane :build do |options|
    flavor = options[:flavor] || ENV.fetch("FLAVOR", "prod")
    entry = options[:entry] || ENV.fetch("DART_ENTRY", "lib/main_prod.dart")
    build_appbundle = options[:aab] || ENV["BUILD_AAB"] == "true"

    if build_appbundle
      sh "fvm flutter build appbundle --flavor #{flavor} -t #{entry}"
    else
      sh "fvm flutter build apk --flavor #{flavor} -t #{entry}"
    end
  end

  desc "Local debug APK build"
  lane :local do
    ENV["FLAVOR"] = "local"
    ENV["DART_ENTRY"] = "lib/main_local.dart"

    prep
    build(flavor: "local", entry: "lib/main_local.dart")
  end

  desc "Prod release AAB build"
  lane :prod do
    ENV["FLAVOR"] = "prod"
    ENV["DART_ENTRY"] = "lib/main_prod.dart"
    ENV["BUILD_AAB"] = "true"

    prep
    build(flavor: "prod", entry: "lib/main_prod.dart", aab: true)
  end
end
